user                    nginx;
error_log               /var/log/nginx/error.log warn;
pid                     /var/run/nginx.pid;
worker_processes        auto;
worker_rlimit_nofile    33282;

events {
    use epoll;
    worker_connections  1024;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

  include       conf.d/*.conf;

  map $http_upgrade $connection_upgrade {
      default     "upgrade";
  }

  upstream springboot {
    server 127.0.0.1:8080;
    keepalive 1024;
  }

  server {
      listen        80 default_server;

      # https://velog.io/@prayme/CORS-%EC%A0%95%EB%B3%B5%EA%B8%B0
      location {
        # 올바른 Preflight Request 인지 확인하기 위한 변수
        set $FLAG "";

        # Preflight Reuquest인지 확인하기
        if ($request_method = OPTIONS) {
          set $FLAG "A";
        }

        # 허용된 Origin인지 확인하기
        if ($http_origin ~* "http://elasticbeanstalk-ap-northeast-2-506714295105.s3-website.ap-northeast-2.amazonaws.com/" | "http://localhost:3000") {
          set $FLAG "${FLAG}B";
        }

        # 위의 조건들이 TRUE면 요청을 허용한다.
        if ($FLAG = "AB") {
          add_header "Access-Control-Allow-Origin" $http_origin; // 일부 origin만 허용
          add_header "Access-Control-Allow-Methods" "GET, POST, DELETE, PUT, OPTIONS"; // 사용하는 METHOD만 허용
          add_header "Access-Control-Allow-Headers" "Authorization"; // 사용하는 헤더만 허용
          add_header "Access-Control-Max-Age" "3600"; // 캐싱 타임 설정
          return 204;
        }
      }

      location / {
          proxy_pass          http://elasticbeanstalk-ap-northeast-2-506714295105.s3-website.ap-northeast-2.amazonaws.com;
          proxy_http_version  1.1;
          proxy_set_header    Connection          $connection_upgrade;
          proxy_set_header    Upgrade             $http_upgrade;

          proxy_set_header    Host                $host;
          proxy_set_header    X-Real-IP           $remote_addr;
          proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
          if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, DELETE, PATCH, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';
            add_header 'Access-Control-Max-Age' 86400;
            return 204;
          }
          add_header 'Access-Control-Allow-Origin' '*' always;
          add_header 'Content-Type' 'application/json' always;
      }

      access_log    /var/log/nginx/access.log main;

      client_header_timeout 60;
      client_body_timeout   60;
      keepalive_timeout     60;
      gzip                  off;
      gzip_comp_level       4;

      # Include the Elastic Beanstalk generated locations
      include conf.d/elasticbeanstalk/healthd.conf;
  }
}