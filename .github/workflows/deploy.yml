#####################
# 백엔드 배포 참고
# https://wonit.tistory.com/597
# https://jojoldu.tistory.com/549
# https://bluayer.com/46
# RDS 생성
# https://docs.aws.amazon.com/ko_kr/AmazonRDS/latest/UserGuide/USER_CreateDBInstance.html
# https://velog.io/@dnwlsrla40/IntelliJ-RDS%EC%99%80-%EC%97%B0%EA%B2%B0%ED%95%98%EA%B8%B0
#####################

name: SocialGallery

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

env:
  RESOURCE_PATH: ./galleryBackend/src/main/resources/application-prod.yaml

jobs:
  backend:
    name: galleryBackend
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
        working-directory: galleryBackend

    steps:
      - name: Checkout Github-Action
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Set Yaml
        uses: microsoft/variable-substitution@v1
        with:
          files: ${{ env.RESOURCE_PATH }}
        env:
          spring.security.oauth2.client.registration.google.client-id: ${{ secrets.GOOGLE_CLIENT_ID }}
          spring.security.oauth2.client.registration.google.client-secret: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          spring.security.oauth2.client.registration.google.redirect-uri: ${{ secrets.GOOGLE_REDIRECT_URI }}
          spring.jwt.secret: ${{ secrets.JWT_SECRET }}
          app.auth.token-secret: ${{ secrets.TOKEN_SECRET }}
          cloud.aws.credentials.access-key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          cloud.aws.credentials.secret-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          cloud.aws.s3.bucket: ${{ secrets.S3_BUCKET_NAME }}

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Get current time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYYYMMDDTHHmm
          utcOffset: "+09:00"

      - name: Show Current Time
        run: echo "CurrentTime=${{steps.current-time.outputs.formattedTime}}"
        shell: bash

      # gradle build를 통해 만들어진 jar 파일 beanstalk에 배포하기 위한 zip 파일로 만듬
      - name: Generate deployment package
        run: |
          mkdir -p deploy
          cp build/libs/*.jar deploy/application.jar
          cp Procfile deploy/Procfile
          cp -r .ebextensions deploy/.ebextensions
          cp -r .platform deploy/.platform
          cd deploy && zip -r deploy.zip .
      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v19
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: SocialGallery
          environment_name: Socialgallery-env-1
          region: ap-northeast-2
          version_label: github-action-${{steps.current-time.outputs.formattedTime}}
          deployment_package: galleryBackend/deploy/deploy.zip
          wait_for_environment_recovery: 90

  frontend:
    name: galleryFrontend
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
        working-directory: galleryfrontend

    strategy:
      matrix:
        node-version: [12.22.12]

    steps:
      - name: Checkout Github-Action
        uses: actions/checkout@v2

      - name: Cache node modules
        id: node-cache
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: node.js 12 설치 ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Dependencies
        # if: steps.node-cache.outputs.cache-hit != 'true'
        run: npm install

      - name: npm 빌드
        run: npm run build
        env:
          CI: ""

      - name: Configure AWS credentials from Test account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Deploy
        run: |
          aws s3 cp \
            --recursive \
            build s3://elasticbeanstalk-ap-northeast-2-506714295105 --acl public-read